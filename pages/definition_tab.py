import streamlit as st
from clients.gpt_client import GPTClient

def generate_cpn_from_empathy_map(empathy_map: str) -> str:
    gpt = GPTClient()

    prompt = f"""
√Ä partir de la carte d‚Äôempathie suivante :

{empathy_map.strip()}

üéØ Ta mission :
G√©n√®re une liste de 4 √† 6 formulations de CPN (Comment Pourrions-Nous...), qui traduisent les tensions ou besoins crois√©s des utilisateurs.
Chaque CPN doit √™tre clair, sp√©cifique, et ouvrir des pistes de solution

Exemples de formulation :
- Comment pourrions-nous simplifier‚Ä¶
- Comment pourrions-nous permettre √†‚Ä¶
- Comment pourrions-nous √©viter que‚Ä¶

Puis s√©lectionne 2 √† 3 CPN √† fort potentiel :
- Fort impact (pour les deux parties)
- Faciles √† prototyper ou √† tester rapidement
- Sources de valeur directe

Termine par une synth√®se argument√©e expliquant pourquoi ces CPN sont prioritaires pour un atelier d‚Äôid√©ation ou de prototypage rapide.
"""

    try:
        return gpt.complete(
            prompt=prompt,
            system_prompt="Tu es expert en Design Thinking. Structure ta r√©ponse avec des bullets, des sauts de ligne et une synth√®se claire.",
            temperature=0.5,
            max_tokens=1000,
            timeout=60.0
        )
    except Exception as e:
        return f"‚ùå Erreur lors de la g√©n√©ration des CPN : {e}"

def render():
    st.header("√âtape 2 : D√©finition")
    st.markdown("üéØ Reformuler les besoins en opportunit√©s d‚Äôinnovation via des CPN (Comment Pourrions-Nous...)")

    if "empathy_map" not in st.session_state or not st.session_state.empathy_map.strip():
        st.warning("‚ö†Ô∏è Aucune carte d‚Äôempathie trouv√©e. Veuillez compl√©ter l‚Äô√©tape 1 avant.")
        return

    if "cpn_output" not in st.session_state:
        st.session_state.cpn_output = ""

    st.markdown("## 1Ô∏è‚É£ Carte d‚Äôempathie actuelle")
    st.markdown(st.session_state.empathy_map)

    st.markdown("---")
    st.markdown("## 2Ô∏è‚É£ G√©n√©rer les CPN automatiquement")

    if st.button("üí° G√©n√©rer des CPN √† partir de la carte d‚Äôempathie"):
        with st.spinner("Analyse de la carte et g√©n√©ration en cours‚Ä¶"):
            st.session_state.cpn_output = generate_cpn_from_empathy_map(st.session_state.empathy_map)

    if st.session_state.cpn_output:
        st.markdown("### ‚ú® CPN propos√©s")
        st.markdown(st.session_state.cpn_output)
